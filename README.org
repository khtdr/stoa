* Project Stoa

** Project Status
*** [ ] create an example language, Stox, based on Crafting Interpreters
*** [ ] create a malleable language framework for exploring language ideas

** Example Languages
*** Stox
**** Code Structure
#+begin_src shell :results none
make graphics
#+end_src

[[./images/stox-code.png]]

**** Build Status
#+begin_src sh :exports both :results verbatim
make stox
#+end_src

#+RESULTS:
: CLI Building entry: stox.ts
: CLI Using tsconfig: ../tsconfig.json
: CLI tsup v6.1.2
: CLI Target: node14
: CJS Build start
: CJS ⚡️ Build success in 39ms
: CJS ../bin/stox.js     49.62 KB
: CJS ../bin/stox.js.map 108.80 KB

**** Usage Documentation
#+begin_src sh :exports both :results verbatim
./bin/stox --help
#+end_src

#+RESULTS:
#+begin_example
Usage: node ./bin/stox.js [options] [file]
Show this help message
    --help
prints version info and exits
    -v, --version
prints parse tree and exits
    -p, --parse
prints tokens and exits
    -t, --tokens
runs the repl
    -r, --repl

#+end_example

**** Current Version
#+begin_src sh :exports both :results verbatim
./bin/stox -v
#+end_src

#+RESULTS:
: stox-2022.07.29

**** Code Coverage

#+begin_src sh :exports both :results verbatim
make coverage-stox
#+end_src

#+RESULTS:
#+begin_example
------------------|---------|----------|---------|---------|----------------------------------------
File              | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s
------------------|---------|----------|---------|---------|----------------------------------------
All files         |   88.46 |    71.09 |   92.19 |   89.07 |
 lib/repl-kit     |      40 |      100 |       0 |   33.33 |
  index.ts        |      40 |      100 |       0 |   33.33 | 2-4
 lib/stoa-ltk     |   91.36 |    78.57 |   91.66 |   91.75 |
  language.ts     |    90.9 |    84.21 |     100 |   92.85 | 55-57
  parser.ts       |   82.85 |    52.63 |   76.92 |   79.31 | 10-13,30,55-56,69
  reporter.ts     |     100 |      100 |     100 |     100 |
  runtime.ts      |     100 |      100 |     100 |     100 |
  tokenizer.ts    |   92.03 |    84.48 |   94.44 |   92.78 | 61-62,70-72,195-196
 stox/src         |   85.89 |     66.9 |   94.95 |   87.29 |
  cli-app.ts      |   73.68 |    76.92 |       0 |   76.47 | 23-24,32-33
  interpreter.ts  |   81.52 |     67.3 |   96.42 |   84.25 | ...134-140,155,172,187-189,197,212-218
  parser.ts       |   84.14 |    63.15 |   94.11 |   85.64 | ...153,163-167,241,342-347,396,419-437
  printer.ts      |   91.52 |     62.5 |      96 |   90.38 | 48-54
  repl.ts         |     100 |      100 |     100 |     100 |
  resolver.ts     |   95.06 |       85 |   96.42 |   95.89 | 46,115,152
  stox-lang.ts    |     100 |      100 |     100 |     100 |
  tokenizer.ts    |     100 |      100 |     100 |     100 |
 stox/src/ast     |   97.77 |      100 |   95.23 |   96.96 |
  declarations.ts |     100 |      100 |     100 |     100 |
  expressions.ts  |     100 |      100 |     100 |     100 |
  nodes.ts        |     100 |      100 |     100 |     100 |
  statements.ts   |    92.3 |      100 |   85.71 |   89.47 | 25-26
  visitor.ts      |     100 |      100 |     100 |     100 |
 stox/src/runtime |   92.45 |    76.31 |   85.71 |   89.18 |
  control-flow.ts |   94.44 |       50 |      75 |   91.66 | 7
  environment.ts  |   90.47 |       75 |     100 |   84.61 | 17,23
  globals.ts      |      75 |      100 |      50 |      75 | 7
  values.ts       |     100 |      100 |     100 |     100 |
------------------|---------|----------|---------|---------|----------------------------------------

=============================== Coverage summary ===============================
Statements   : 88.46% ( 821/928 )
Branches     : 71.09% ( 300/422 )
Functions    : 92.19% ( 189/205 )
Lines        : 89.07% ( 709/796 )
================================================================================
#+end_example

The latest uploaded report is at: https://khtdr.com/stoa/coverage/

**** Test Suite Status

#+begin_src sh :exports both :results verbatim
make test-stox
#+end_src

#+RESULTS:
#+begin_example
Testing: arithmetic.stox
✔✔✔✔✔✔
Testing: closures.stox
✔✔✔✔✔✔
Testing: comments.stox
✔✔✔✔✔✔
Testing: divide-by-zero.stox
✔✔✔✔✔✔
Testing: fib.stox
✔✔✔✔✔✔
Testing: functions.stox
✔✔✔✔✔✔
Testing: global-redefine.stox
✔✔✔✔✔✔
Testing: hello-world.stox
✔✔✔✔✔✔
Testing: literals.stox
✔✔✔✔✔✔
Testing: logical-ternary.stox
✔✔✔✔✔✔
Testing: name.stox
✔✔✔✔✔✔
Testing: same-names.stox
✔✔✔✔✔✔
Testing: scope.stox
✔✔✔✔✔✔
Testing: semantic-return.stox
✔✔✔✔✔✔
Testing: sticky-precision.stox
✔✔✔✔✔✔

Passing: 90 out of 90 (100%)
Failing: 0 out of 90 (0%)

#+end_example

**** Potential Goals
- full stack from sql to hover effects
- lsp compatible
- actually use it to create
- minimize user function writing with string/date/number primitives

* ...
** clean
src_elisp[:results none]{(save-excursion (org-goto-line 1) (+org/remove-result-blocks t))}
** build
src_elisp[:results none]{(save-excursion (org-goto-line 1) (org-babel-execute-subtree))}
