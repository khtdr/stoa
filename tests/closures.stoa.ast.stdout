(program 
   (var counter outer-scope)
   (print counter)
   (var inc)
   (block 
      (var counter 0)
      (print counter)
      (fun incr (let [] (block 
         (= counter (+ counter 1))
         (return counter)
      )))
      (= inc incr)
   )
   (print (call inc))
   (print (call inc))
   (print (call inc))
   (print counter)
   (fun makeDec (let [i] (block 
      (fun dec (let [] (block 
         (= i (- i 1))
         (return i)
      )))
      (return dec)
   )))
   (var i 12)
   (var dec (call makeDec 100))
   (print (call dec))
   (print (call dec))
   (print i)
   (fun makeCounter (let [start] (block 
      (var n start)
      (return (let [] (block 
         (= n (+ n 1))
         (return n)
      )))
   )))
   (var c (call makeCounter 212))
   (print (call c))
)
