(program 
   (fun makeCounter (let [start] (block 
      (var n start)
      (return (let [] (block 
         (= n (+ n 1))
         (return n)
      )))
   )))
   (print (call (call makeCounter 212)))
   (let [] (block 
      
   ))
   (fun forkCounter (let [counter] (block 
      (return (call makeCounter (call counter)))
   )))
   (fun diffCounter (let [counter] (block 
      (var e (call makeCounter (call counter)))
      (return (let [] (block 
         (var cv (call counter))
         (var ev (call e))
         (return (- cv ev))
      )))
   )))
   (var c (call makeCounter 100))
   (var d (call forkCounter c))
   (print (+ (+ (call c) ,) (call d)))
   (var e (call diffCounter c))
   (call e)
   (call e)
   (call e)
   (print (+ (+ (+ (+ (call c) ,) (call d)) ,) (call e)))
   (print done)
)
