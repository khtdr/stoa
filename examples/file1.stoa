+(1 2)
;; 3

+(1 +(2 +(+(3 4) 5)))
;; 15

~~(1234567890987)
;; > 1234567890987

#(n 1 10 :~~(n))
;; > 1
;; > 2
;; > 3
;; > 4
;; > 5
;; > 6
;; > 7
;; > 8
;; > 9
;; > 10
;; 10

;; The recursive version of factorial
;; - inputs n Number to calculate factorial of
;; - returns factorial of n
=>(recFact n :
   ?(=(n 0) 1 ;; how big is the stack? hmmm
     *(n recFact( -(n 1) ))))
;; rectFact
;;

~~(recFact( 3 ))
;; > 6

=>(dub n :*(2 n))
dub(34)

;; A iterative version
=>(iterFact n :
     <-(value 1) ;; no stack overflow here
     #(i 1 n
         <-(value *(value i))))
;; iterFact

~~(iterFact(4))
;; > 24

iterFact(40)
;; 59280
